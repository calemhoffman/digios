#!/bin/bash

if [ $# -lt 3 ] || [ $1 == "-help"  ]; then
  echo "$./process_Sort [RunNum] [EventBuild] [SaveTrace]"
  echo "    RunNum  = run number"
  echo " EventBuild = 0/1/n/100   ||    0 = no EventBld, 1 = EventBld, n>1 = EventBld with trace"
  echo "  SaveTrace = 0/1         ||    0 = no trace, 1 = save trace"
  exit 1
fi;

source ${HELIOSSYS}/analysis/Armory/process_PathSetting

builder=EventBuilder_S
eventWindow=1000 # in ticks, 1 tick = 10 ns

RUN=$1
runID=$1
isBuild=$2
isSaveTrace=$3
isTrace=0

#just in case people put %03d as RUN
if [ "${RUN:0:2}" == "00" ]; then
    RUN=${RUN:2:1}
elif [ "${RUN:0:1}" == "0" ]; then
    RUN=${RUN:1:2}
else
    RUN=$(printf '%d' $RUN)
fi

RUN=$(printf '%03d' ${RUN})

ROOTNAME=gen_run${RUN}.root
if [ ${isBuild} -ge 2 ] || [ ${isBuild} -le -2 ] ; then
  ROOTNAME=trace_run${RUN}.root
  isTrace=${isBuild#-} # if isBuild is negative, then isTrace is positive
fi

if [ $# -eq 1 ]; then
    echo -e "${Cyan}============================================="
    echo "============ RUN $RUN ========================"
    echo -e "=============================================${NC}"
fi

source $ROOTSYS/bin/thisroot.sh

dir=$(pwd)
cd ${GEBDIR}
make ${builder}
cd $dir

#######################################
#################### Sort
echo -e "${RED}######################### EventBuilder started sorting run $RUN${NC}"

if [ $isBuild -eq 0 ]; then 
    echo -e "${YELLOW} >>>>>> skipped by user${NC}" 
elif [ $isBuild -gt 0 ]; then

    #==== check raw data timeStamp
    if [ ${Arch} == "Linux" ]; then
        if [ ${PCName} == "digios1" ]; then
            echo -e "\033[0;31m WARNING : MAXIMUM MERGE SIZE IS 4.0GB \033[0m."
        fi
        rawDataTime=`stat -c "%Z"  ${DATADIR}/${expName}_run_$RUN.gtd* | sort -rn | head -1`    
    else
        rawDataTime=`stat -f "%Sm" -t "%Y%m%d%H%M%S" ${DATADIR}/${expName}_run_$RUN.gtd* | sort -rn | head -1`    
    fi

    #==== check if root data exist
    isRootDataExist=`ls -1 ${ROOTDIR}/${ROOTNAME} 2>/dev/null | wc -l`
    if [ ${isRootDataExist} -gt 0 ]; then
        if [ ${Arch} == "Linux" ]; then
            rootDataTime=`stat -c "%Z" ${ROOTDIR}/${ROOTNAME}`
        else
            rootDataTime=`stat -f "%Sm" -t "%Y%m%d%H%M%S" ${ROOTDIR}/${ROOTNAME}`
        fi
    else
        rootDataTime=0
    fi

    if [ ${rawDataTime} -ge ${rootDataTime} ]; then
        echo -e "${RED}=================== RUN $RUN: EventBuilder started at `date`${NC}"
        
        ${GEBDIR}/${builder} ${ROOTDIR}/${ROOTNAME} ${eventWindow} $isSaveTrace ${isTrace} `\ls -1 ${DATADIR}/${expName}_run_$RUN.gtd*`

        echo -e "${RED}====================== RUN $RUN: EventBuilder DONE at `date`${NC}"
        echo -e "saved root file >>>>>>  ${YELLOW} ${ROOTDIR}/${ROOTNAME} ${NC} "
        echo "============================================================================="
    else
        echo -e "${BLUE}Root data are newer than raw data. No need to do again.${NC}"
        echo -e "${GREEN}You can Force event buidling using option -1, ${ORANGE} see ./process_run.sh -help${NC}"
    fi
elif [ $isBuild -lt 0 ]; then # force Sort
    echo -e "${RED}=================== RUN $RUN: EventBuilder started at `date`${NC}"
    echo -e "${YELLOW} >>>>>>>>>>>>> force sort by user ${NC}"
    
    ${GEBDIR}/${builder} ${ROOTDIR}/${ROOTNAME} ${eventWindow} $isSaveTrace  $isTrace `\ls -1 ${DATADIR}/${expName}_run_$RUN.gtd*`
    
    echo -e "${RED}====================== RUN $RUN: EventBuilder DONE at `date`${NC}"
    echo -e "saved root file >>>>>>  ${YELLOW} ${ROOTDIR}/${ROOTNAME} ${NC} "
    echo "============================================================================="
fi



